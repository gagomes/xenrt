#
## Add your test specific information btween the "< >"'s
#
#######################################################################
#
# The name of this file is cli_test
#
#
# Copyright (c) 2005 XenSource, Inc. All use and distribution of this
# copyrighted material is governed by and subject to terms and
# conditions as licensed by XenSource, Inc. All other rights reserved.
#
#
# Created on 092705, by Ovais Quraishi
#
# Changes:
#        <Include date, name, description and reason.>
#        <Do not remove or overwrite previous change remarks.>
#        <Use this indentation. One tabstop. >
#
#       Initial version 092805, Ovais Quraishi 
#
#
# This file:
#	XenOpt 1.x CLI test case 
#
# Description of this test file:
#       tp1() - Tests the default std out behavior of "xenman" 
#		command w/o an command line arg on the controller
#       tp2()
#       tp3()
#       tp4()
#       tp5()
#
# Expected results:
#       tp1()
#       tp2()
#       tp3()
#       tp4()
#       tp5()
#
# Side effects of this test:
#        <None.>
#
# Supporting files and Relationship:
#        <None.>
#
################################################################

# ---TET test purposes--- #
iclist="ic1"                                # list invocable components

# map the icnames to the test purpose functions
ic1="tp1 tp2 tp3"               # functions for ic1

# test name
test_name="cli_test"


#---TET startup functions---#
tet_startup="startup"                   # startup function
tet_cleanup="cleanup"                   # cleanup function

#####################################################################
#       tp1() - Test XENMAN command without supplying a CL arg.
#####################################################################

tp1()
{
 #vars specific to EACH tp"
 tp="tp1"
 tptitle="CTLR: xenman without any command line args"
 tpresultset="1"
 xenman_cli_arg=""

 curr_res=$( $ctlr_bin_loc/$ctlr_bin_name $xenman_cli_arg 2>&1 )
 
 orig_res=$( if [ -f $expected_res_loc/$test_name/"$tp"_result_"$tpresultset" ]; then cat $expected_res_loc/$test_name/"$tp"_result_"$tpresultset"; else echo "Not found"; fi )

 if [[ "$curr_res" == "$orig_res" ]]
 then
     tp_result="PASSED"
     log_n_echo "$tp $tptitle: $tp_result"
     tet_result PASS
 else
     tp_result="FAILED"
     log_n_echo "$tp $tptitle: $tp_result"
     tet_result FAIL
 fi
}

#####################################################################
#       tp2() xenman with -h CL arg
#####################################################################

tp2()
{
 #vars specific to EACH tp"
 tp="tp2"
 tptitle="CTLR: xenman -h"
 tpresultset="1"
 xenman_cli_arg="-h"

 curr_res=$( $ctlr_bin_loc/$ctlr_bin_name $xenman_cli_arg 2>&1 )

 orig_res=$( if [ -f $expected_res_loc/$test_name/"$tp"_result_"$tpresultset" ]; then cat $expected_res_loc/$test_name/"$tp"_result_"$tpresultset"; else echo "Not found"; fi )

 if [[ "$curr_res" == "$orig_res" ]]
 then
     tp_result="PASSED"
     log_n_echo "$tp $tptitle: $tp_result"
     tet_result PASS
 else
     tp_result="FAILED"
     log_n_echo "$tp $tptitle: $tp_result"
     tet_result FAIL
 fi
}

#####################################################################
#       tp3() xenman with --list-commands CL arg
#####################################################################

tp3()
{
 #vars specific to EACH tp"
 tp="tp3"
 tptitle="CTLR: xenman --list-commands"
 tpresultset="1"
 xenman_cli_arg="--list-commands"

 curr_res=$( $ctlr_bin_loc/$ctlr_bin_name $xenman_cli_arg 2>&1 )

 orig_res=$( if [ -f $expected_res_loc/$test_name/"$tp"_result_"$tpresultset" ]; then cat $expected_res_loc/$test_name/"$tp"_result_"$tpresultset"; else echo "Not found"; fi )

 if [[ "$curr_res" == "$orig_res" ]]
 then
     tp_result="PASSED"
     log_n_echo "$tp $tptitle: $tp_result"
     tet_result PASS
 else
     tp_result="FAILED"
     log_n_echo "$tp $tptitle: $tp_result"
     tet_result FAIL
 fi
}


# ------- End -------

# --- TET startup function --- #

startup()
{
# --- Test Suite Specific common shell functions ---#
export TSROOT
. ${TSROOT:?}/utils/funcs

}

# --- TET cleanup function --- #
cleanup() # clean-up function
{
}
#

# ------- DO NOT EDIT THIS POINT FORWARD -------

#--- Include the TCM--- #
# execute shell test case manager - must be last line
. $TET_ROOT/lib/ksh/tcm.ksh

